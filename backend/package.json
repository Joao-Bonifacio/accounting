{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/infra/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test:watch": "dotenv -e .env.test -- vitest",
    "test:unit": "dotenv -e .env.test -- vitest run --exclude='**/*.test.ts'",
    "test:integration": "dotenv -e .env.test -- vitest run --exclude='**/*.spec.ts'",
    "test:cov": "vitest run --coverage",
    "test:debug": "vitest --inspect-brk --inspect --logHeapUsage --threads=false",
    "test:e2e": "dotenv -e .env.test -- vitest run --config=vitest.config.e2e.mts",
    "test:all": "npm run test:unit; npm run test:integration; npm run test:e2e",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org myself-z09 --project node-nestjs ./out && sentry-cli sourcemaps upload --org myself-z09 --project node-nestjs ./out",
    "db:postgres": "prisma migrate reset --force --schema=prisma/postgres.schema.prisma; prisma generate --schema=prisma/postgres.schema.prisma; prisma migrate dev --schema=prisma/postgres.schema.prisma --name test",
    "db:postgres-test": "dotenv -e .env.test -- prisma generate --schema=prisma/postgres.schema.prisma; prisma migrate dev --schema=prisma/postgres.schema.prisma",
    "db:postgres-prod": "prisma generate --schema=prisma/postgres.schema.prisma; prisma migrate deploy --schema=prisma/postgres.schema.prisma",
    "db:mongo": "prisma generate --schema=prisma/mongo.schema.prisma; prisma db push --schema=prisma/mongo.schema.prisma",
    "db:mongo-test": "dotenv -e .env.test -- prisma generate --schema=prisma/mongo.schema.prisma; prisma db push --schema=prisma/mongo.schema.prisma",
    "db:seed": "prisma db seed"
  },
  "prisma": {
    "seed": "tsx prisma/seed.ts"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.842.0",
    "@faker-js/faker": "^9.9.0",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@prisma/adapter-better-sqlite3": "^6.11.1",
    "@prisma/client": "^6.11.1",
    "@sentry/nestjs": "^9.35.0",
    "@sentry/profiling-node": "^9.35.0",
    "bcryptjs": "^3.0.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "compression": "^1.8.0",
    "cookie-parser": "^1.4.7",
    "dayjs": "^1.11.13",
    "express-session": "^1.18.1",
    "helmet": "^8.1.0",
    "ioredis": "^5.6.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "zod": "^3.25.74",
    "zod-validation-error": "^4.0.0-beta.1"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@rocketseat/eslint-config": "^2.2.2",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/express": "^5.0.0",
    "@types/ioredis": "^4.28.10",
    "@types/jest": "^29.5.14",
    "@types/multer": "^2.0.0",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.2",
    "dotenv-cli": "^8.0.0",
    "eslint": "^9.30.1",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "prettier": "^3.4.2",
    "prisma": "^6.10.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.20.3",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0",
    "unplugin-swc": "^1.5.5",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
